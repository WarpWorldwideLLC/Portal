/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2017-12-22 15:44:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class membermanagement_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/Users/jarp/Dropbox/Personal/WARP%20Worldwide/WARP%20Source/JWeb/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/com.warpww.web/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153403082000L));
    _jspx_dependants.put("/htx/footer.html", Long.valueOf(1505671394000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1502292791000L));
    _jspx_dependants.put("jar:file:/Users/jarp/Dropbox/Personal/WARP%20Worldwide/WARP%20Source/JWeb/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/com.warpww.web/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153403082000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      if (_jspx_meth_fmt_005fsetLocale_005f0(_jspx_page_context))
        return;
      if (_jspx_meth_fmt_005fsetBundle_005f0(_jspx_page_context))
        return;
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t    \t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("\t\t\t<meta http-equiv=\"cache-control\" content=\"max-age=0\" />\n");
      out.write("\t\t\t<meta http-equiv=\"cache-control\" content=\"no-cache\" />\n");
      out.write("\t\t\t<meta http-equiv=\"expires\" content=\"-1\" />\n");
      out.write("\t\t\t<meta http-equiv=\"expires\" content=\"Tue, 01 Jan 1980 1:00:00 GMT\" />\n");
      out.write("\t\t\t<meta http-equiv=\"pragma\" content=\"no-cache\" />\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t<!-- Bootstrap and Custom CSS -->\n");
      out.write("\t\t\t<!--  \n");
      out.write("    \t\t\t<link href=\"cssx/bootstrap.min.css\" rel=\"stylesheet\"/>\n");
      out.write("    \t\t\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css\" integrity=\"sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb\" crossorigin=\"anonymous\">\n");
      out.write("    \t\t\t<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n");
      out.write("    \t\t\t -->\n");
      out.write("    \t\t\t <link href=\"cssx/bootstrap.css\" rel=\"stylesheet\"/>\n");
      out.write("    \t\t\t\n");
      out.write("    \t\t\t<link href=\"cssx/warp_custom.css\" rel=\"stylesheet\"/>\n");
      out.write("    \t\t\t\n");
      out.write("    \t\t\t\t<!-- jQuery  -->\n");
      out.write("\t\t    <script src=\"jsx/jquery.js\"></script>\n");
      out.write("\t\t  \n");
      out.write("\t\t    <!-- Bootstrap Js CDN -->\n");
      out.write("\t\t    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("    \n");
      out.write(" \t\t\t<script>\n");
      out.write(" \t\t\t\n");
      out.write("\t \t\t\t// Retrieve the jsonResults parameter contents into a javascript variable. \n");
      out.write("\t \t\t\tvar myList = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${jsonResults}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'; \n");
      out.write("\t \t\t\t//alert(myList);\n");
      out.write("\t\t\t\tvar myList2 = \n");
      out.write("\t\t\t\t[\n");
      out.write("\t\t\t\t  { \"name\": \"abc\", \"age\": 50 },\n");
      out.write("\t\t\t\t  { \"age\": \"25\", \"hobby\": \"swimming\" },\n");
      out.write("\t\t\t\t  { \"name\": \"xyz\", \"hobby\": \"programming\" }\n");
      out.write("\t\t\t\t];\n");
      out.write("\t\t\t\t\n");
      out.write("\n");
      out.write("\t\t\t\t// showArray(myList2);\n");
      out.write("\t\t\t\t// showObject(myList2[0]);\n");
      out.write("\t\t\t\t// showObject(myList2);\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// List Elements of an array\n");
      out.write("\t\t\t\tfunction showArray(objArr) {\n");
      out.write("\t\t\t\t\t$.each(objArr, function(index, element) {\n");
      out.write("\t\t\t\t\t\talert(\"ArrayIndex: \" + index + \" ArrayElement: \" + element);\n");
      out.write("\t\t\t\t\t}) \n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// List properties of an object\n");
      out.write("\t\t\t\tfunction showObject(obj) {\n");
      out.write("\t\t\t\t\t\talert(JSON.stringify(obj));\n");
      out.write("\t\t\t\t\t  $.each(obj, function(objectProperty, objectValue) {\n");
      out.write("\t\t\t\t\t\talert(\"PropertyName: \" + objectProperty + \" PropertyValue: \" + objectValue)\n");
      out.write("\t\t\t\t\t  });\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// Build HTML Table from JSON input. \n");
      out.write("\t\t\t\tfunction warpBuildHtmlTable(selector) {\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tjsonData = JSON.parse(myList);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar columnList = warpAddAllColumnHeaders(selector, jsonData);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$.each(jsonData, function(arrayIndex, arrayValue) {\n");
      out.write("\t\t\t\t\t\tvar row$ = $('<tr>');\n");
      out.write("\t\t\t\t\t\t// Pull arrayValue for each corresponding ColumnValue to ensure Table Header and Table Data align properly.\n");
      out.write("\t\t\t\t\t\t$.each(columnList, function(columnIndex, columnValue) {\n");
      out.write("\t\t\t\t\t\t\tvar cellValue = arrayValue[columnValue];\n");
      out.write("\t\t\t\t\t\t\tif(cellValue == null) cellValue == \"\";\n");
      out.write("\t\t\t\t\t\t\trow$.append($('<td/>').html(cellValue));\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t$(selector).append(row$);\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// Adds a header row to the table and returns the set of columns.\n");
      out.write("\t\t\t\t// Need to do union of keys from all records as some records may not contain\n");
      out.write("\t\t\t\t// all records.\n");
      out.write("\t\t\t\tfunction warpAddAllColumnHeaders (selector, jsonData) {\n");
      out.write("\t\t\t\t\tvar columnSet = [];\n");
      out.write("\t\t\t\t\tvar headerTr$ = $('<tr/>');\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$.each(jsonData, function(arrayIndex, arrayValue) {\n");
      out.write("\t\t\t\t\t\tvar rowHash = arrayValue;\n");
      out.write("\t\t\t\t\t\t$.each(arrayValue, function(elementName, elementValue) {\n");
      out.write("\t\t\t\t\t\t\tif ($.inArray(elementName, columnSet) == -1) \n");
      out.write("\t\t\t\t\t\t      {\n");
      out.write("\t\t\t\t\t\t        columnSet.push(elementName);\n");
      out.write("\t\t\t\t\t\t        headerTr$.append($('<th/>').html(elementName));\n");
      out.write("\t\t\t\t\t\t      }\n");
      out.write("\t\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t});\n");
      out.write("\t\t\t\t\t$(selector).append(headerTr$);\n");
      out.write("\t\t\t\t\treturn columnSet;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// Builds the HTML Table out of myList.\n");
      out.write("\t\t\t\tfunction buildHtmlTable(selector) {\n");
      out.write("\t\t\t\t  var columns = addAllColumnHeaders(myList, selector);\n");
      out.write("\n");
      out.write("\t\t\t\t  for (var i = 0; i < myList.length; i++) {\n");
      out.write("\t\t\t\t    var row$ = $('<tr/>');\n");
      out.write("\t\t\t\t    for (var colIndex = 0; colIndex < columns.length; colIndex++) {\n");
      out.write("\t\t\t\t      var cellValue = myList[i][columns[colIndex]];\n");
      out.write("\t\t\t\t      if (cellValue == null) cellValue = \"\";\n");
      out.write("\t\t\t\t      row$.append($('<td/>').html(cellValue));\n");
      out.write("\t\t\t\t    }\n");
      out.write("\t\t\t\t    $(selector).append(row$);\n");
      out.write("\t\t\t\t  }\n");
      out.write("\t\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\t\t// Adds a header row to the table and returns the set of columns.\n");
      out.write("\t\t\t\t// Need to do union of keys from all records as some records may not contain\n");
      out.write("\t\t\t\t// all records.\n");
      out.write("\t\t\t\tfunction addAllColumnHeaders(myList, selector) {\n");
      out.write("\t\t\t\t  var columnSet = [];\n");
      out.write("\t\t\t\t  var headerTr$ = $('<tr/>');\n");
      out.write("\t\t\t\t  \n");
      out.write("\t\t\t\t  for (var i = 0; i < myList.length; i++) {\n");
      out.write("\t\t\t\t    var rowHash = myList[i];\n");
      out.write("\t\t\t\t    for (var key in rowHash) {\n");
      out.write("\t\t\t\t      if ($.inArray(key, columnSet) == -1) \n");
      out.write("\t\t\t\t      {\n");
      out.write("\t\t\t\t        columnSet.push(key);\n");
      out.write("\t\t\t\t        headerTr$.append($('<th/>').html(key));\n");
      out.write("\t\t\t\t      }\n");
      out.write("\t\t\t\t    }\n");
      out.write("\t\t\t\t  }\n");
      out.write("\t\t\t\t  $(selector).append(headerTr$);\n");
      out.write("\n");
      out.write("\t\t\t\t  return columnSet;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t</script>\n");
      out.write("    \t\t\t\n");
      out.write("    \t\t\t\n");
      out.write("\t        <title>WARP Member Management</title>\n");
      out.write("\t    </head>\n");
      out.write("\t<body onLoad=\"warpBuildHtmlTable('#jsonDataTable')\">\n");
      out.write("\t<!-- onLoad=\"buildHtmlTable('#jsonDataTable')\"  -->\n");
      out.write("\t     <form method=\"post\" action=\"/com.warpww.web/membermanagement\" enctype=\"multipart/form-data\" name=\"membermanagement\" autocomplete=\"off\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\t    \n");
      out.write("\t\t\t<header>\n");
      out.write("\t\t\t\t<h1>\n");
      out.write("\t\t\t\t\t<br><label>");
      if (_jspx_meth_fmt_005fmessage_005f0(_jspx_page_context))
        return;
      out.write("</label> \n");
      out.write("\t\t\t\t\t<br><label>");
      if (_jspx_meth_fmt_005fmessage_005f1(_jspx_page_context))
        return;
      out.write("</label> \n");
      out.write("\t\t\t\t</h1>\n");
      out.write("\t\t\t</header>\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t<div class=\"wrapper\">\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t    <!-- Sidebar -->\n");
      out.write("\t\t\t    \n");
      out.write("\t\t\t    <nav id=\"sidebar\">\n");
      out.write("\t\t\t\t\t<!-- Sidebar Header -->\n");
      out.write("\t\t\t        <div class=\"sidebar-header\">\n");
      out.write("\t\t\t            <h3>Collapsible Sidebar</h3>\n");
      out.write("\t\t\t        </div>\t\t       \n");
      out.write("\t\n");
      out.write("\t\t\t\t\t<!-- Sidebar Links -->\n");
      out.write("\t\t\t        <ul class=\"list-unstyled components\">\n");
      out.write("\t\t\t            <li class=\"active\"><a href=\"#\">Home</a></li>\n");
      out.write("\t\t\t            <li><a href=\"#\">About</a></li>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t            <li><!-- Link with dropdown items -->\n");
      out.write("\t\t\t                <a href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\">Pages</a>\n");
      out.write("\t\t\t                <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\">\n");
      out.write("\t\t\t                    <li><a href=\"#\">Page</a></li>\n");
      out.write("\t\t\t                    <li><a href=\"#\">Page</a></li>\n");
      out.write("\t\t\t                    <li><a href=\"#\">Page</a></li>\n");
      out.write("\t\t\t                </ul>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t            <li><a href=\"#\">Portfolio</a></li>\n");
      out.write("\t\t\t            <li><a href=\"#\">Contact</a></li>\n");
      out.write("\t\t\t        </ul>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\t\t    </nav>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t    <!-- Page Content -->\n");
      out.write("\t\t\t    <div id=\"content\">\n");
      out.write("\t\t\t\t    <button type=\"button\" id=\"sidebarCollapse\" class=\"btn btn-info navbar-btn\">\n");
      out.write("\t\t\t\t        <i class=\"glyphicon glyphicon-align-left\"></i>\n");
      out.write("\t\t\t\t        Toggle Sidebar\n");
      out.write("\t\t\t\t    </button>\n");
      out.write("\t\t\t\t    <br>\n");
      out.write("\n");
      out.write("\t     \t\t\t<table id=\"jsonDataTable\" border=\"1\"></table>\n");
      out.write("\n");
      out.write("\t\t\t\t    <br>\n");
      out.write("\t\t\t\t    \n");
      out.write("\t\t\t\t    <button type=\"submit\" id=\"Submit\" >Submit</button>\n");
      out.write("\t\t\t    </div>\n");
      out.write("\t\t\t</div>       \n");
      out.write("\t\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t<footer>\n");
      out.write("\t\t\t\t\t");
      out.write("<br/>\n");
      out.write("<div id=\"navcontainer\">\n");
      out.write("\t<ul id=\"navList\">\n");
      out.write("\t\t<li><a href=\"mission\">Our Mission</a> \n");
      out.write("\t\t<li><a href=\"about\">About Us</a>\n");
      out.write("\t\t<li><a href=\"contact\">Contact Us</a>\n");
      out.write("\t\t<li><a href=\"solutions\">Solutions</a>\n");
      out.write("\t\t<li><a href=\"contact\">Partner with WARP</a>\n");
      out.write("\t\t<li><a href=\"contact\">Careers Get WARPed!</a>\n");
      out.write("\t\t<li><a href=\"contact\">Support</a>\n");
      out.write("\t\t<li><a href=\"contact\">Log In</a>\n");
      out.write("\t\t<li><a href=\"contact\">Register</a>\t\t\t\t\t\t\n");
      out.write("\t</ul>\t\n");
      out.write("\t<form>\n");
      out.write("\t    <select id=\"language\" name=\"language\" onchange=\"submit()\">\n");
      out.write("\t      <option value=\"en\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language == 'en' ? 'selected' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('>');
      if (_jspx_meth_fmt_005fmessage_005f2(_jspx_page_context))
        return;
      out.write("</option>\n");
      out.write("\t      <option value=\"es\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language == 'es' ? 'selected' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('>');
      if (_jspx_meth_fmt_005fmessage_005f3(_jspx_page_context))
        return;
      out.write("</option>\n");
      out.write("\t      <option value=\"zh\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language == 'zh' ? 'selected' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('>');
      if (_jspx_meth_fmt_005fmessage_005f4(_jspx_page_context))
        return;
      out.write("</option>\n");
      out.write("\t    </select>\n");
      out.write("\t</form>\n");
      out.write("\t<label>");
      if (_jspx_meth_fmt_005fmessage_005f5(_jspx_page_context))
        return;
      out.write("</div>");
      out.write("</footer>\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t <script type=\"text/javascript\">\n");
      out.write("\t             $(document).ready(function () {\n");
      out.write("\t                 $('#sidebarCollapse').on('click', function () {\n");
      out.write("\t                     $('#sidebar').toggleClass('active');\n");
      out.write("\t                 });\n");
      out.write("\t             });\n");
      out.write("\t         </script>\n");
      out.write("   \n");
      out.write("\t    </form>\n");
      out.write("\t</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/membermanagement.jsp(5,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("language");
      // /WEB-INF/membermanagement.jsp(5,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/membermanagement.jsp(5,0) '${not empty param.language ? param.language : not empty language ? language : pageContext.request.locale}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${not empty param.language ? param.language : not empty language ? language : pageContext.request.locale}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/membermanagement.jsp(5,0) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setScope("session");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fsetLocale_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:setLocale
    org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag _jspx_th_fmt_005fsetLocale_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag) _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.SetLocaleTag.class);
    boolean _jspx_th_fmt_005fsetLocale_005f0_reused = false;
    try {
      _jspx_th_fmt_005fsetLocale_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fsetLocale_005f0.setParent(null);
      // /WEB-INF/membermanagement.jsp(6,0) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fsetLocale_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_fmt_005fsetLocale_005f0 = _jspx_th_fmt_005fsetLocale_005f0.doStartTag();
      if (_jspx_th_fmt_005fsetLocale_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fsetLocale_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005fsetLocale_005f0);
      _jspx_th_fmt_005fsetLocale_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fsetLocale_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fsetLocale_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fsetBundle_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:setBundle
    org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag _jspx_th_fmt_005fsetBundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag) _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.SetBundleTag.class);
    boolean _jspx_th_fmt_005fsetBundle_005f0_reused = false;
    try {
      _jspx_th_fmt_005fsetBundle_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fsetBundle_005f0.setParent(null);
      // /WEB-INF/membermanagement.jsp(7,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fsetBundle_005f0.setBasename("com.warpww.web.i18n.membermanagement");
      int _jspx_eval_fmt_005fsetBundle_005f0 = _jspx_th_fmt_005fsetBundle_005f0.doStartTag();
      if (_jspx_th_fmt_005fsetBundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fsetBundle_0026_005fbasename_005fnobody.reuse(_jspx_th_fmt_005fsetBundle_005f0);
      _jspx_th_fmt_005fsetBundle_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fsetBundle_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fsetBundle_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f0_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f0.setParent(null);
      // /WEB-INF/membermanagement.jsp(160,16) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f0.setKey("label.title1");
      int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      _jspx_th_fmt_005fmessage_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f1_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f1.setParent(null);
      // /WEB-INF/membermanagement.jsp(161,16) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f1.setKey("label.title2");
      int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      _jspx_th_fmt_005fmessage_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f1, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f2_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f2.setParent(null);
      // /htx/footer.html(16,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f2.setKey("footer.language.selector.en");
      int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      _jspx_th_fmt_005fmessage_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f2, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f3_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f3.setParent(null);
      // /htx/footer.html(17,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f3.setKey("footer.language.selector.es");
      int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      _jspx_th_fmt_005fmessage_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f3, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f4_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f4.setParent(null);
      // /htx/footer.html(18,64) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f4.setKey("footer.language.selector.zh");
      int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      _jspx_th_fmt_005fmessage_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f4, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    boolean _jspx_th_fmt_005fmessage_005f5_reused = false;
    try {
      _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fmessage_005f5.setParent(null);
      // /htx/footer.html(21,8) name = key type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fmessage_005f5.setKey("footer.label.i18n");
      int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
      if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      _jspx_th_fmt_005fmessage_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fmessage_005f5, _jsp_getInstanceManager(), _jspx_th_fmt_005fmessage_005f5_reused);
    }
    return false;
  }
}
